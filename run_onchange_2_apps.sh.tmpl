#!/bin/bash

# Colors
YELLOW=$(printf '\033[1;33m')
RED=$(printf '\033[0;31m')
RESET=$(printf '\033[0m')
GREEN=$(printf '\033[0;32m')

echo " ${YELLOW}===========> Second step : running chezmoi apply ${RESET}"
echo " ${YELLOW}===========> Installing apps ${RESET}"
# Function to check for a command and install it if not found
check_and_install() {
    local command_name=$1
    local install_command=$2
    local installed_packages=$3  # Precomputed list of installed packages

    echo "${YELLOW}Checking for ${command_name}...${NC}"

    if echo "${installed_packages}" | grep -qw "${command_name}"; then
        echo "${GREEN}${command_name} is already installed.${NC}"
    else
        echo "${YELLOW}${command_name} not found. Installing ${command_name}...${NC}"
        eval "${install_command}"
    fi
}

echo " ${YELLOW} Installing apps ${RESET}"
{{ if eq .chezmoi.os "darwin" -}}

# Precompute installed brew formulas and casks
installed_brew_apps=$(brew list)

# Install brew formulas
{{ range .packages.darwin.brews -}}
check_and_install {{ . | quote }} "brew install {{ . | quote }}" "${installed_brew_apps}"
{{ end -}}

# Install cask packages
{{ range .packages.darwin.casks -}}
check_and_install {{ . | quote }} "brew install --cask {{ . | quote }}" "${installed_brew_apps}"
{{ end -}}

{{ end -}}

########## Linux
{{ if eq .chezmoi.os "linux" -}}

# Function to check and install apt packages
install_apt_package() {
  local package=$1
  if ! dpkg -l | grep -q "^ii  $package "; then
    sudo apt-get update
    sudo apt-get install -y "$package"
  else
    echo "$package is already installed."
  fi
}

# Function to check and install snap packages
install_snap_package() {
  local package=$1
  if ! snap list | grep -q "^$package "; then
    sudo snap install "$package"
  else
    echo "$package is already installed."
  fi
}

# Install apt packages
{{ range .packages.linux.apt -}}
install_apt_package {{ . | quote }}
{{ end -}}

# Install snap packages
{{ range .packages.linux.snap -}}
install_snap_package {{ . | quote }}
{{ end -}}

{{ end -}}
