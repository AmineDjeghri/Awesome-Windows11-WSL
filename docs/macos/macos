note aside : we use chezmoi, to develop tmpl scripts, no need to learn go, just code everything in functions and call them in the script inside the go template.


- i switched the macos keys to have a similar behaviour as a windows keyboard. I feel that it's more natural to cpy maste with your last finger of your left hand hitting the command key (now being mapped to fn/globe) rather that the original command key
feel free to do so :

(insert image here in the readme)
- (to update ) create the script like WSL (since it's omz, it cross platform) for terminal

- install sdk tools (it installs git) (i used pycharm since it does it automatically, pycharm activate sync settings)
- install omz, powerlvl10k ? always install this first, because it updates the .zshrc file
- (optional) install uv and copy this to zshrc :

- install brew then : echo "export PATH=/opt/homebrew/bin:$PATH" >> ~/.zshrc
- install raycast (import settings if previously installed)
- brew install bat fastfetch btop , lsd....
...
    echo 'alias cat="bat"' >>~/.zshrc
  bat is the macos equivalent of ubuntu's batcat

- also :
    -  /usr/bin/python3 (this is the python that comes with macos)
    - you can alias another python if you want echo this : alias python=/usr/bin/python3 in .zshrc (this is the python that comes with macos)
    - alias python="uv run python" in .zshrc




 - alttab : alttab as in windows & also, close directly apps from there (if you switch the keys like i did, you will have a similar env as in windows)
- raycast (powershell alternative) with extensions. it also has a camera preview, brew search, right click on an app to uninstall after search,  and loooot more
- extensions to isntall :
- replace spotlight with raycasrt : remove spotlight shorctut from keyboards settings, and add the spotlight shorctut to raycast in raycast general settings
you can use thr F4 key (with the glass) to use finder . Finder is still usefull for macos settings, and stuff that raycast doesn't find.
sudo terminal with touch ID : sed -e 's/^#auth/auth/' /etc/pam.d/sudo_local.template | sudo tee /etc/pam.d/sudo_local
- if you installed iTerm2 or another terminal, run raycast ans search for terminal, right click and select disable application. you won't see the native terminal anymore

- hidden bar : hide icons from menu bar ( put it in hidden on the left to hide it )
- Badgefy : shows the number of notifications on icons of the menu bar (teams, emails)

- shottr, screenshots, text , draw and ocr (keep it in the meu icons for easy access to features)

UI UX :
- night shift
- auto hide the dock
- choose which icons to delete from the menu bar (command +  drag an icon out of the menu bar until a cross shows, not all apps allows this)
- group windows same app in dock option
- default browser : brave (with different profiles : personal, work, etc..)
in finder
- show tab bar
- show path
- show hidden files (command shift .)


apps ui :
- aerospace and
    - tutorial https://www.youtube.com/watch?v=-FoWClVHG5g
    - config :
    - https://nikitabobko.github.io/AeroSpace/goodness#use-trackpad-gestures-to-switch-workspaces
    - special mode : option+ space : to writer special caracters since aerosapce uses alt  . it is very helpful for azerty keyboards
   - add to BetterTouchTools finger gestures :
    - /opt/homebrew/bin/aerospace workspace "$(/opt/homebrew/bin/aerospace list-workspaces --monitor mouse --visible)" && /opt/homebrew/bin/aerospace workspace next
    /opt/homebrew/bin/aerospace workspace "$(/opt/homebrew/bin/aerospace list-workspaces --monitor mouse --visible)" && /opt/homebrew/bin/aerospace workspace prev


- border color (needs aerospace) : JankyBorders

- - commander one : sftp and easy copy paste stuff, multiple windows
- config : (do not change the order of the elements)
- shottr
- SwiftQuit ( add raycast and shottr to exceptions of this app)
- zed editor (brew) :
    - (open for example the home folder, or other project)
    - works also great for single file but doesn't retain the in the 'open recent'
    - install plugins and extensions
    - update shortcuts to match pycharm shortcuts
shorctus :
- lock macbook : press touch id button

- install uv and remap it
macOS vs. Windows Keyboard Layout

	1.	Command (⌘) Key: The ⌘ key (command) is the macOS equivalent of the Ctrl key in Windows for most shortcuts. If you’re used to pressing Ctrl+C to copy in Windows, it’s ⌘+C on macOS.
	2.	Option (⌥) Key: This is similar to the Alt key in Windows. It’s commonly used in shortcuts for navigation and special characters. For example, Option+Left moves the cursor one word to the left, much like Ctrl+Left in Windows.
	3.	Control (⌃) Key: While it still serves as a control key, in macOS it’s more often used for secondary actions, like opening context menus (Control+Click for right-click).
	4.	Delete Key: The delete key on macOS behaves like Backspace in Windows. To delete forward, use Fn+Delete.

So, while Command (⌘) usually works as the Ctrl key on macOS, for app switching specifically, it behaves like Alt in Windows. This dual role is unique to macOS, and it can feel a little counterintuitive at first. But once you’re familiar, switching between apps on macOS will feel just as fluid!

Configurations to import/export manually :
The following apps don't have settings that we can import/export, you need to manually open the app and configure it :
- Ice
- Altab
App to install manually :
- Badgeify : shows the number of notifications on icons of the menu bar (teams, emails)


replace python by uv python in .zshrc
